"A date string with format `Y-m-d`, e.g. `2011-05-23`."
scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")

"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

"Can be used as an argument to upload files using https://github.com/jaydenseric/graphql-multipart-request-spec"
scalar Upload @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Upload")

type Query {
    file(id: ID @eq): File @find @can(ability: "view", find: "id")
    me: User!
}

type Mutation {
  login(email: String!, password: String!, client_id: String!, client_secret: String!): AccessToken!
  fileUpload(file: Upload!): File
  fileProcess(id: ID @eq): File @can(ability: "view", find: "id")
}

type User {
    id: ID!
    name: String!
    email: String!
    created_at: DateTime!
    updated_at: DateTime!
    files: [File!] @hasMany
}

type File {
    id: ID!
    name: String!
    path: String!
    user: User! @belongsTo
    expenses: [Expenses!] @hasMany
    incomes: [Incomes!] @hasMany
    limitations: [Limitations!] @hasMany
    created_at: DateTime!
    updated_at: DateTime!
}

type Expenses {
    id: ID!
    month: Int!
    year: Int!

    title: String!
    value: Float!
    date: Date!

    file: File! @belongsTo
}

type Incomes {
    id: ID!
    month: Int!
    year: Int!

    title: String!
    value: Float!

    file: File! @belongsTo
}

type Limitations {
    id: ID!
    month: Int!
    year: Int!

    value_per_week: Float!
    description: String!
    time_per_month: Float!
    title: String!

    file: File! @belongsTo
}

type AccessToken {
  accessToken: String!
  expires: Int!
}
